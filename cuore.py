import turtle
#richiamo le classi T,S a partire dal modulo turtle
t=turtle.Turtle()
s=turtle.Screen()
s.bgcolor("white")
t.width(2)
t.color("purple")
t.speed(7) #5-10.5
t.penup()
t.goto(0,200)
t.pendown()
t.begin_fill()
a=50
ip1=(a**2+a**2)**(1/2)
print("ip1=",ip1)
t.right(45)
t.forward(ip1)
xb=t.xcor()
yb=t.ycor()
print("xb=",xb,"yb=",yb)
t.left(90)
t.forward(ip1)
b=150
ip2=(b**2+b**2)**(1/2)
print("ip2=",ip2)
#t.right(30)
t.circle(radius=-ip2/2,extent=1/4*2*3.14*ip2/2)

xf=t.xcor()
yf=t.ycor()
print("xf=",xf,"yf=",yf)
catetoIF=265.41326608664235 -50.00000000000001
print("catetoIF=",catetoIF)
ip3=(catetoIF**2+catetoIF**2)**(1/2)
print("ip3=",ip3)
angle=t.heading()
print(angle)
a=238.4763530306-45
t.right(a)
angle2=t.heading()
print("angle2=",angle2)

t.right(180)
angle3=t.heading()
print("angle3=",angle3)
xf45=t.xcor()
yf45=t.ycor()
print("xf45=",xf45,"yf45=",yf45)

t.forward(304) #huiu87tyju0999'i'0

t.right(90)
t.forward(304) #gggggggtfftfuuyffuftftfytftftft
t.fillcolor("magenta")

#t.end_fill()
t.penup()
t.goto(0,200)
t.pendown()
#t.begin_fill()
t.circle(radius=ip2/2,extent=1/4*2*3.14*ip2/2)
xh=t.xcor()
yh=t.ycor()
print("xh=",xh,"yh=",yh)
#t.fillcolor("magenta")
t.end_fill()
#croce
t.penup()
t.goto(50.00000000000001 ,100)
t.pendown()
t.color("purple")
t.begin_fill()
angle4=t.heading()
print(angle4)
angolo=301.5236469694-45
print(angolo)
t.right(256.5236469694)
t.heading()
print(t.heading())
t.right(90)

c=20
ip4=(c**2+c**2)**(1/2)
print("ip4=",ip4)
t.forward(ip4)
t.right(45)
t.forward(40)
t.left(90)
t.forward(40)
t.right(45)
t.forward(ip4)
t.right(90)
t.forward(ip4)
t.right(45)
t.forward(40)
t.left(90)
t.forward(40)
t.right(45)
t.forward(ip4)
t.right(90)
t.forward(ip4)
t.right(45)
t.forward(40)
t.left(90)
t.forward(40)
t.right(45)
t.forward(ip4)
t.right(90)
t.forward(ip4)
t.right(45)
t.forward(40)
t.left(90)
t.forward(40)
t.right(45)
t.forward(ip4)

t.fillcolor("grey")
t.end_fill()

s.mainloop()
